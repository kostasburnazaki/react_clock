{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","secondsTimerId","nameUpdateTimerId","getRandomName","value","now","toString","slice","formatTime","date","toUTCString","this","window","setInterval","console","info","setState","prevProps","prevName","name","props","debug","clearInterval","timeString","className","Component","App","hasClock","clockName","rightClickHandler","leftClickHandler","event","preventDefault","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"qMAWaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,eAAiB,EALnB,EAOEC,kBAAoB,EAPtB,EAgCEC,cAAgB,WACd,IAAMC,EAAQJ,KAAKK,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,IAnCpB,EAsCEI,WAAa,SAACC,GAAD,OAAgBA,EAAKC,cAAcH,OAAO,IAAK,IAtC9D,uDASE,WAAqB,IAAD,OAClBI,KAAKV,eAAiBW,OAAOC,aAAY,WACvC,IAAMd,EAAO,IAAIC,KAEjBc,QAAQC,KAAK,EAAKP,WAAWT,IAE7B,EAAKiB,SAAS,CAAEjB,WACf,OAhBP,gCAmBE,SAAmBkB,GACjB,IAAMC,EAAWD,EAAUE,KACnBA,EAASR,KAAKS,MAAdD,KAEJD,IAAaC,GACfL,QAAQO,MAAR,uBAA8BH,EAA9B,eAA6CC,MAxBnD,kCA4BE,WACEG,cAAcX,KAAKV,kBA7BvB,oBAwCE,WACE,IAAQF,EAASY,KAAKb,MAAdC,KACAoB,EAASR,KAAKS,MAAdD,KACFI,EAAaZ,KAAKH,WAAWT,GAEnC,OACE,sBAAKyB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGD,WAtDX,GAA2BE,aCFdC,G,MAAb,4MACE5B,MAAyB,CACvB6B,UAAU,EACVC,UAAW,WAHf,EAME1B,kBAAoB,EANtB,EAwBEC,cAAgB,WACd,IAAMC,EAAQJ,KAAKK,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,IA3BpB,EA8BEyB,kBAAoB,WAClB,EAAKb,SAAS,CAAEW,UAAU,KA/B9B,EAkCEG,iBAAmB,SAACC,GAClBA,EAAMC,iBAEN,EAAKhB,SAAS,CAAEW,UAAU,KArC9B,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAevB,KAAKmB,kBAE9CG,SAASC,iBAAiB,QAASvB,KAAKkB,mBAExClB,KAAKT,kBAAoBU,OAAOC,aAAY,WAC1C,IAAMe,EAAY,EAAKzB,gBAEvB,EAAKa,SAAS,CAAEY,gBACf,QAjBP,kCAoBE,WACEN,cAAcX,KAAKT,qBArBvB,oBAwCE,WACE,MAAgCS,KAAKb,MAA7B6B,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CAECG,GAAY,cAAC,EAAD,CAAOR,KAAMS,WA/ClC,GAAyBH,cCNzBU,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.7cc1df0b.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype State = {\n  time: Date,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    time: new Date(),\n  };\n\n  secondsTimerId = 0;\n\n  nameUpdateTimerId = 0;\n\n  componentDidMount() {\n    this.secondsTimerId = window.setInterval(() => {\n      const time = new Date();\n\n      console.info(this.formatTime(time));\n\n      this.setState({ time });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevName = prevProps.name;\n    const { name } = this.props;\n\n    if (prevName !== name) {\n      console.debug(`Renamed from ${prevName} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.secondsTimerId);\n  }\n\n  getRandomName = (): string => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  formatTime = (date: Date) => date.toUTCString().slice(-12, -4);\n\n  render() {\n    const { time } = this.state;\n    const { name } = this.props;\n    const timeString = this.formatTime(time);\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {timeString}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  nameUpdateTimerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.leftClickHandler);\n\n    document.addEventListener('click', this.rightClickHandler);\n\n    this.nameUpdateTimerId = window.setInterval(() => {\n      const clockName = this.getRandomName();\n\n      this.setState({ clockName });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.nameUpdateTimerId);\n  }\n\n  getRandomName = (): string => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  rightClickHandler = () => {\n    this.setState({ hasClock: true });\n  };\n\n  leftClickHandler = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}